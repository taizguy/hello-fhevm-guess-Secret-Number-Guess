{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umer\\\\Downloads\\\\hello-fhevm-guess-full\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport GuessGame from './GuessGame.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [guess, setGuess] = useState('');\n  const [message, setMessage] = useState('');\n  async function submitGuess() {\n    if (!window.ethereum) return;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = process.env.REACT_APP_CONTRACT;\n    const contract = new ethers.Contract(addr, GuessGame.abi, signer);\n    // For demo, just hex-encode guess\n    const hexGuess = Buffer.from(guess).toString('hex');\n    const tx = await contract.submitEncryptedGuess(\"0x\" + hexGuess);\n    await tx.wait();\n    setMessage(\"Guess submitted!\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello FHEVM Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: guess,\n      onChange: e => setGuess(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitGuess,\n      children: \"Submit Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y7TivG2ysOPhp3tvW4sjRvqZlbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","GuessGame","jsxDEV","_jsxDEV","App","_s","guess","setGuess","message","setMessage","submitGuess","window","ethereum","provider","providers","Web3Provider","signer","getSigner","addr","process","env","REACT_APP_CONTRACT","contract","Contract","abi","hexGuess","Buffer","from","toString","tx","submitEncryptedGuess","wait","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umer/Downloads/hello-fhevm-guess-full/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport GuessGame from './GuessGame.json';\n\nfunction App() {\n  const [guess, setGuess] = useState('');\n  const [message, setMessage] = useState('');\n\n  async function submitGuess() {\n    if (!window.ethereum) return;\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = process.env.REACT_APP_CONTRACT;\n    const contract = new ethers.Contract(addr, GuessGame.abi, signer);\n    // For demo, just hex-encode guess\n    const hexGuess = Buffer.from(guess).toString('hex');\n    const tx = await contract.submitEncryptedGuess(\"0x\"+hexGuess);\n    await tx.wait();\n    setMessage(\"Guess submitted!\");\n  }\n\n  return (\n    <div>\n      <h1>Hello FHEVM Guess</h1>\n      <input value={guess} onChange={e=>setGuess(e.target.value)} />\n      <button onClick={submitGuess}>Submit Guess</button>\n      <p>{message}</p>\n    </div>\n  );\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,eAAeW,WAAWA,CAAA,EAAG;IAC3B,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;IACtB,MAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAS,CAACC,YAAY,CAACJ,MAAM,CAACC,QAAQ,CAAC;IACnE,MAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;IAC3C,MAAMC,QAAQ,GAAG,IAAItB,MAAM,CAACuB,QAAQ,CAACL,IAAI,EAAEjB,SAAS,CAACuB,GAAG,EAAER,MAAM,CAAC;IACjE;IACA,MAAMS,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACrB,KAAK,CAAC,CAACsB,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAMC,EAAE,GAAG,MAAMP,QAAQ,CAACQ,oBAAoB,CAAC,IAAI,GAACL,QAAQ,CAAC;IAC7D,MAAMI,EAAE,CAACE,IAAI,CAAC,CAAC;IACftB,UAAU,CAAC,kBAAkB,CAAC;EAChC;EAEA,oBACEN,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjC,OAAA;MAAOkC,KAAK,EAAE/B,KAAM;MAACgC,QAAQ,EAAEC,CAAC,IAAEhC,QAAQ,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DjC,OAAA;MAAQsC,OAAO,EAAE/B,WAAY;MAAAsB,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDjC,OAAA;MAAA6B,QAAA,EAAIxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAC/B,EAAA,CAzBQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}